-- n00bGUI V2 â€” full, respawn-proof client script
-- Place this LocalScript in StarterPlayerScripts

local player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

--==============================
-- GUI
--==============================
local gui = Instance.new("ScreenGui")
gui.Name = "n00bGUI"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = false
gui.Parent = player:WaitForChild("PlayerGui")

-- Panel
local panel = Instance.new("Frame")
panel.Size = UDim2.new(0, 300, 0, 500)
panel.Position = UDim2.new(0.5, -150, 1.5, -250) -- start off-screen
panel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
panel.BorderSizePixel = 4
panel.BorderColor3 = Color3.fromRGB(255, 255, 0)
panel.Parent = gui

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "n00bGUI V2    by n00bHAX"
title.TextColor3 = Color3.fromRGB(255, 255, 0)
title.Font = Enum.Font.Code
title.TextSize = 20
title.Parent = panel

-- Toggle button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 120, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 1, -50)
toggleButton.Text = "Open n00bGUI"
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toggleButton.BorderSizePixel = 2
toggleButton.BorderColor3 = Color3.fromRGB(255, 255, 0)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 0)
toggleButton.Font = Enum.Font.Code
toggleButton.TextSize = 16
toggleButton.Parent = gui

local guiVisible = false
local slideIn = TweenService:Create(panel, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -150, 0.5, -250)})
local slideOut = TweenService:Create(panel, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In),  {Position = UDim2.new(0.5, -150, 1.5, -250)})

toggleButton.MouseButton1Click:Connect(function()
    guiVisible = not guiVisible
    toggleButton.Text = guiVisible and "Close n00bGUI" or "Open n00bGUI"
    if guiVisible then slideIn:Play() else slideOut:Play() end
end)

-- Button factory (with 10% centered hover growth)
local function createButton(text, yPos, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 280, 0, 40)
    btn.Position = UDim2.new(0, 10, 0, yPos)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    btn.BorderSizePixel = 2
    btn.BorderColor3 = Color3.fromRGB(255, 255, 0)
    btn.TextColor3 = Color3.fromRGB(255, 255, 0)
    btn.Font = Enum.Font.Code
    btn.TextSize = 18
    btn.Parent = panel

    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 308, 0, 44),
            Position = UDim2.new(0, 10 - ((308 - 280) / 2), 0, yPos - ((44 - 40) / 2))
        }):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 280, 0, 40),
            Position = UDim2.new(0, 10, 0, yPos)
        }):Play()
    end)

    btn.MouseButton1Click:Connect(callback)
end

--==============================
-- State and character binding
--==============================
local character, hrp, humanoid
local flying = false
local noclip = false
local spinning = false
local speedGain = false
local currentSpeed = 16
local lowGrav = false
local defaultGrav = workspace.Gravity

-- Physics movers (reused across respawns)
local bv = Instance.new("BodyVelocity")
bv.MaxForce = Vector3.new(1e9, 1e9, 1e9)
bv.Velocity = Vector3.zero

local bg = Instance.new("BodyGyro")
bg.MaxTorque = Vector3.new(1e9, 1e9, 1e9)
bg.P = 1e5
bg.D = 500

-- Bind to current/next character
local function bindCharacter(char)
    character = char
    hrp = character:WaitForChild("HumanoidRootPart")
    humanoid = character:WaitForChild("Humanoid")

    -- Reapply active states
    if flying then
        bv.Parent = hrp
        bg.Parent = hrp
        humanoid.PlatformStand = true
    else
        bv.Parent = nil
        bg.Parent = nil
        if humanoid then humanoid.PlatformStand = false end
    end

    if speedGain and humanoid then
        currentSpeed = 16
        humanoid.WalkSpeed = currentSpeed
    end
end

player.CharacterAdded:Connect(bindCharacter)
bindCharacter(player.Character or player.CharacterAdded:Wait())

--==============================
-- Buttons
--==============================
createButton("Toggle Fly", 50, function()
    flying = not flying
    if flying and hrp and humanoid then
        bv.Parent = hrp
        bg.Parent = hrp
        humanoid.PlatformStand = true
    else
        bv.Parent = nil
        bg.Parent = nil
        if humanoid then humanoid.PlatformStand = false end
        if hrp then hrp.Velocity = Vector3.zero end
    end
end)

createButton("Toggle Noclip", 100, function()
    noclip = not noclip
end)

createButton("Teleport to Random Player", 150, function()
    local players = game.Players:GetPlayers()
    if #players <= 1 then return end
    local target
    for _ = 1, 10 do
        local t = players[math.random(1, #players)]
        if t ~= player then target = t break end
    end
    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and hrp then
        hrp.CFrame = target.Character.HumanoidRootPart.CFrame + Vector3.new(2, 0, 0)
    end
end)

createButton("Toggle Spin", 200, function()
    spinning = not spinning
end)

createButton("Spawn Part", 250, function()
    if not hrp then return end
    local part = Instance.new("Part")
    part.Size = Vector3.new(6, 1, 6)
    part.Position = hrp.Position - Vector3.new(0, 3, 0)
    part.Anchored = true
    part.BrickColor = BrickColor.new("Bright yellow")
    part.Material = Enum.Material.Neon
    part.Parent = workspace
end)

createButton("Toggle Speed Gain", 300, function()
    speedGain = not speedGain
    if not speedGain and humanoid then
        currentSpeed = 16
        humanoid.WalkSpeed = currentSpeed
    end
end)

createButton("Toggle Low Gravity", 350, function()
    lowGrav = not lowGrav
    workspace.Gravity = lowGrav and 50 or defaultGrav
end)

--==============================
-- Runtime loops
--==============================
RunService.RenderStepped:Connect(function()
    if flying and hrp and humanoid then
        local cam = workspace.CurrentCamera
        if not cam then return end
        local move = Vector3.zero
        if UIS:IsKeyDown(Enum.KeyCode.W) then move += cam.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.S) then move -= cam.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.A) then move -= cam.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.D) then move += cam.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.Space) then move += Vector3.new(0, 1, 0) end
        if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then move -= Vector3.new(0, 1, 0) end

        if move.Magnitude > 0 then
            bv.Velocity = move.Unit * 50
        else
            bv.Velocity = Vector3.zero
        end
        bg.CFrame = cam.CFrame
    end
end)

RunService.Heartbeat:Connect(function()
    if spinning and hrp then
        hrp.CFrame = hrp.CFrame * CFrame.Angles(0, math.rad(1000), 0)
    end
    if speedGain and humanoid then
        if humanoid.MoveDirection.Magnitude > 0 then
            currentSpeed += 0.5
            humanoid.WalkSpeed = currentSpeed
        else
            currentSpeed = 16
            humanoid.WalkSpeed = currentSpeed
        end
    end
end)

RunService.Stepped:Connect(function()
    if noclip and character then
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)
