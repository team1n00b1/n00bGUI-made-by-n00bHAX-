local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "n00bGUI"
gui.ResetOnSpawn = false

-- Main Panel
local panel = Instance.new("Frame", gui)
panel.Size = UDim2.new(0, 300, 0, 500)
panel.Position = UDim2.new(0.5, -150, 0.5, -250)
panel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
panel.BorderSizePixel = 4
panel.BorderColor3 = Color3.fromRGB(255, 255, 0)
panel.Visible = true

-- Title Label
local title = Instance.new("TextLabel", panel)
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.Text = "n00bGUI V1    by n00bHAX"
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(255, 255, 0)
title.Font = Enum.Font.Code
title.TextSize = 20

-- Toggle Button
local toggleButton = Instance.new("TextButton", gui)
toggleButton.Size = UDim2.new(0, 120, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 1, -50)
toggleButton.Text = "Close n00bGUI"
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toggleButton.BorderSizePixel = 2
toggleButton.BorderColor3 = Color3.fromRGB(255, 255, 0)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 0)
toggleButton.Font = Enum.Font.Code
toggleButton.TextSize = 16

local guiVisible = true
toggleButton.MouseButton1Click:Connect(function()
    guiVisible = not guiVisible
    panel.Visible = guiVisible
    toggleButton.Text = guiVisible and "Close n00bGUI" or "Open n00bGUI"
end)

-- Button Creator
local function createButton(text, yPos, callback)
    local btn = Instance.new("TextButton", panel)
    btn.Size = UDim2.new(0, 280, 0, 40)
    btn.Position = UDim2.new(0, 10, 0, yPos)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    btn.BorderSizePixel = 2
    btn.BorderColor3 = Color3.fromRGB(255, 255, 0)
    btn.TextColor3 = Color3.fromRGB(255, 255, 0)
    btn.Font = Enum.Font.Code
    btn.TextSize = 18
    btn.MouseButton1Click:Connect(callback)
end

-- Fly Toggle
local flying = false
local flyVelocity = Instance.new("BodyVelocity")
flyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
flyVelocity.Velocity = Vector3.new(0, 50, 0)

createButton("Toggle Fly", 50, function()
    flying = not flying
    if flying then
        flyVelocity.Parent = hrp
    else
        flyVelocity.Parent = nil
    end
end)

-- Noclip Toggle
local noclip = false
createButton("Toggle Noclip", 100, function()
    noclip = not noclip
end)

game:GetService("RunService").Stepped:Connect(function()
    if noclip and character then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

-- Teleport to Random Player
createButton("Teleport to Random Player", 150, function()
    local players = game.Players:GetPlayers()
    local target = players[math.random(1, #players)]
    if target ~= player and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
        hrp.CFrame = target.Character.HumanoidRootPart.CFrame + Vector3.new(2, 0, 0)
    end
end)

-- Spin Toggle
local spinning = false
createButton("Toggle Spin", 200, function()
    spinning = not spinning
end)

game:GetService("RunService").Heartbeat:Connect(function()
    if spinning and hrp then
        hrp.CFrame = hrp.CFrame * CFrame.Angles(0, math.rad(1000), 0)
    end
end)

-- Directional Fly
local UIS = game:GetService("UserInputService")
local dirFlying = false

createButton("Directional Fly", 250, function()
    dirFlying = not dirFlying
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if dirFlying and hrp then
        local moveVec = Vector3.new()
        if UIS:IsKeyDown(Enum.KeyCode.W) then moveVec = moveVec + hrp.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.S) then moveVec = moveVec - hrp.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.A) then moveVec = moveVec - hrp.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.D) then moveVec = moveVec + hrp.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.Space) then moveVec = moveVec + Vector3.new(0, 1, 0) end
        hrp.Velocity = moveVec.Unit * 50
    end
end)

-- Spawn Part
createButton("Spawn Part", 300, function()
    local part = Instance.new("Part")
    part.Size = Vector3.new(6, 1, 6)
    part.Position = hrp.Position - Vector3.new(0, 3, 0)
    part.Anchored = true
    part.BrickColor = BrickColor.new("Bright yellow")
    part.Material = Enum.Material.Neon
    part.Parent = workspace
end)

-- Speed Gain Toggle
local speedGain = false
local currentSpeed = 16
local maxSpeed = 50

createButton("Toggle Speed Gain", 350, function()
    speedGain = not speedGain
    if not speedGain then
        humanoid.WalkSpeed = 16
    end
end)

game:GetService("RunService").Heartbeat:Connect(function()
    if speedGain and humanoid.MoveDirection.Magnitude > 0 then
        currentSpeed = math.min(currentSpeed + 0.5, maxSpeed)
        humanoid.WalkSpeed = currentSpeed
    elseif speedGain then
        currentSpeed = 16
        humanoid.WalkSpeed = currentSpeed
    end
end)

-- Random Dance Button
local danceAnimIds = {
    "rbxassetid://507771019",  -- Zombie
    "rbxassetid://33796059",   -- Robot
    "rbxassetid://180435571",  -- Breakdance
    "rbxassetid://148840371",  -- Gangnam Style
    "rbxassetid://3189773368"  -- Hype
}

local currentDanceTrack

createButton("Dance: Random Style", 400, function()
    if currentDanceTrack then
        currentDanceTrack:Stop()
        currentDanceTrack = nil
        return
    end

    local randomId = danceAnimIds[math.random(1, #danceAnimIds)]
    local anim = Instance.new("Animation")
    anim.AnimationId = randomId

    currentDanceTrack = humanoid:LoadAnimation(anim)
    currentDanceTrack:Play()
end)
